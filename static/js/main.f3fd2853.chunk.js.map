{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isStarted","setStart","className","type","onClick","goodsCopy","sort","a","b","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OACE,sBAAKC,UAAU,MAAf,WACIF,GAEE,wBACEG,KAAK,SACLD,UAAU,oBACVE,QA/BI,WACZH,GAAS,IA2BH,mBASHD,GACC,qCACE,wBACEG,KAAK,SACLD,UAAU,oBACVE,QAtCa,WACrB,IAAMC,EAAS,YAAOP,GAEtBC,EAASM,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,QAgC5C,iCAQA,wBACEL,KAAK,SACLD,UAAU,oBACVE,QAxCW,WACnB,IAAMC,EAAS,YAAOP,GAEtBC,EAASM,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,YAkCzC,4BAQA,wBACEP,KAAK,SACLD,UAAU,oBACVE,QA1CM,WACdL,EAAS,YAAID,GAAOa,YAsCd,qBAQA,wBACER,KAAK,SACLD,UAAU,oBACVE,QA9CI,WACZL,EAASJ,IA0CH,mBAQCK,GAEG,oBAAIE,UAAU,QAAd,SACGJ,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAEEX,UAAU,cAFZ,SAIE,+BAAOW,KAHFA,eC9FzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3fd2853.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isStarted, setStart] = useState(false);\n\n  const start = () => {\n    setStart(true);\n  };\n\n  const sortByAlphabet = () => {\n    const goodsCopy = [...goods];\n\n    setGoods(goodsCopy.sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortByLength = () => {\n    const goodsCopy = [...goods];\n\n    setGoods(goodsCopy.sort((a, b) => a.length - b.length));\n  };\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )}\n\n      {isStarted && (\n        <>\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n\n          {isStarted\n            && (\n              <ul className=\"Goods\">\n                {goods.map(good => (\n                  <li\n                    key={good}\n                    className=\"Goods__item\"\n                  >\n                    <span>{good}</span>\n                  </li>\n                ))}\n              </ul>\n            )}\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}